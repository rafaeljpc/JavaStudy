server:
  port: 9999
  use-forward-headers: false
  servlet:
    context-path: /uaa

spring:
  profiles: default
  application:
    name: auth-server
  datasource:
    url: jdbc:postgresql://localhost:5432/oauth2
    username: postgres
    password: a
  jpa:
    hibernate:
      naming:
        physical-strategy: org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy
      ddl-auto: validate
check-user-scopes: true

# SLF4J
logging:
  level:
    ROOT: ERROR
    org.springframework.web: ERROR
    com.enrico.microservices: DEBUG
  file:  /tmp/logs/application.log
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"

eureka:
  instance:
    hostname: localhost
    port: 9091
  client:
    registerWithEureka: true
    fetchRegistry: false
    serviceUrl:
      defaultZone: http://${eureka.instance.hostname}:${eureka.instance.port}/eureka/
  server:
    wait-time-in-ms-when-sync-empty: 3000

---

#Configurações de Quando estiver em Container
spring:
  profiles: docker
  datasource:
    url: jdbc:postgresql://localhost:5432/oauth2
    username: postgres
    password: a
  jpa:
      hibernate:
        naming:
          physical-strategy: org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy
        ddl-auto: validate
check-user-scopes: true

eureka:
  instance:
    hostname: localhost
    port: 9091
  client:
    registerWithEureka: true
    fetchRegistry: false
    serviceUrl:
      defaultZone: http://${eureka.instance.hostname}:${eureka.instance.port}/eureka/
  server:
    wait-time-in-ms-when-sync-empty: 3000

